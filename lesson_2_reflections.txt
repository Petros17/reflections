1. What happens when you initialize a repository? Why do you need to do it?
-Metadata for a new repository is created, and Git is aware of it's existance


2.How can you use the staging area to make sure you have one commit per logical change?
-By using git diff --staged we can check existing commits, to see previous commits, and git diff to check changes from working directory


3.What are some situations when branches would be helpful in keeping your history organized? How would branches help?
-Making various experiments and changes for which I am not sure that will be part of master branch


4. How do the diagrams help you visualize the branch structure?
-Easier to track reachability and how a commit affects it's branch or other branches


5.What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
-Merging two branches create a single branch, that can reach all the commits from both branches.


6.What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
-Pros: no need to think about merging, Git does all the work
-Cons: trouble in resolving conflicts, it's better for the human to double-check,
on opose to the machine deciding